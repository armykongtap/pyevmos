from __future__ import annotations

from dataclasses import dataclass
from typing import Any

from evmos.proto.transactions import tx


@dataclass
class Domain:
    """This describes ``domain`` field of :class:`EIPToSign`."""

    name: str
    version: str
    chain_id: int
    verifying_contract: str
    salt: str


@dataclass
class EIPToSign:
    """EIP message to sign."""

    types: dict[str, Any]
    primary_type: str
    domain: Domain
    message: dict[str, Any]


@dataclass
class Fee:
    """Fee for message."""

    amount: str
    denom: str
    gas: str


@dataclass
class Sender:
    """Message sender."""

    account_address: str
    sequence: int
    account_number: int
    pubkey: str


@dataclass
class Chain:
    """Chain definition."""

    chain_id: int
    cosmos_chain_id: str


@dataclass
class TxGeneratedSignInfo:
    """Type of :class:`TxGenerated` fields."""

    body: tx.TxBody
    auth_info: tx.AuthInfo
    sign_bytes: str


@dataclass
class TxGeneratedBase:
    """Transaction generated by this library."""

    sign_direct: TxGeneratedSignInfo
    legacy_amino: TxGeneratedSignInfo


@dataclass
class TxGenerated(TxGeneratedBase):
    """Transaction generated by this library (with EIP to sign)."""

    eip_to_sign: EIPToSign
